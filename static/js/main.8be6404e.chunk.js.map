{"version":3,"sources":["Components/AddButton.js","Components/BillModal.js","Components/Circle.js","Components/BillCard.js","Components/TopMessage.js","Components/ColorBar.js","Components/SortingDropdown.js","Container/App.js","serviceWorker.js","index.js"],"names":["AddButton","createNewBill","buttonIcon","id","icon","faPlus","variant","onClick","title","paymentName","paymentDesc","cost","color","BillModal","props","setColor","newColor","setState","hex","handleInputChanged","event","inputType","target","getAttribute","value","state","data","this","setModalVisible","submit","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","type","category","placeholder","onChange","rows","cols","onChangeComplete","Footer","length","isNaN","alert","React","Component","Circle","style","width","height","backgroundColor","borderRadius","marginRight","BillCard","bills","editBillModal","deleteBill","billRows","total","forEach","bill","index","Number","push","key","marginLeft","className","xs","borderRight","sm","border","padding","TopMessage","startingMoney","remainingMoney","message","Math","round","ColorBar","containerWidth","showBillName","bars","pixels","onMouseEnter","onMouseLeave","display","SortingDropdown","sortBills","Item","App","findBillIndexById","billId","billIndex","newStateArray","splice","e","addEditBill","billInfo","slice","createBillModal","setModalData","visible","renderModal","modalData","show","colorBarHoverText","document","getElementById","changeIncome","newIncome","prompt","income","sortType","billsSorted","sort","a","b","toLowerCase","localeCompare","JSON","parse","localStorage","getItem","self","offsetWidth","window","addEventListener","setItem","stringify","billModal","marginTop","noGutters","alignItems","borderColor","marginBottom","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8be6404e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport './AddButton.css';\r\n\r\nconst AddButton = ({createNewBill}) =>{\r\n\tconst buttonIcon = <FontAwesomeIcon id=\"plusIcon\" icon={faPlus}/>;\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Button id=\"button\" variant=\"outline-dark\" onClick={() => createNewBill({title: \"Add\", paymentName:\"\", paymentDesc: \"\", cost:\"\", color: \"#000\", id: null})}>{buttonIcon}</Button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './BillModal.css';\r\nimport { SliderPicker } from 'react-color';\r\n\r\nclass BillModal extends React.Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\ttitle: props.data.title,\r\n\t\t\tpaymentName: props.data.paymentName,\r\n\t\t\tpaymentDesc: props.data.paymentDesc,\r\n\t\t\tcost: props.data.cost,\r\n\t\t\tcolor: props.data.color,\r\n\t\t\tid: props.data.id,\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsetColor = (newColor)=>{\r\n\t\tthis.setState({color: newColor.hex})\r\n\t}\r\n\r\n\thandleInputChanged=(event)=>{\r\n\t\tconst inputType = event.target.getAttribute('category');\r\n\t\tif(inputType===\"paymentName\"){\r\n\t\t\tthis.setState({paymentName: event.target.value});\r\n\t\t} else if(inputType===\"paymentDesc\"){\r\n\t\t\tthis.setState({paymentDesc: event.target.value});\r\n\t\t} else if(inputType===\"cost\"){\r\n\t\t\tthis.setState({cost: event.target.value});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {title, paymentName, paymentDesc, cost, color} = this.state;\r\n\t\tconst {setModalVisible, submit} = this.props;\r\n\t\treturn(\r\n\t\t\t<Modal\r\n\t\t      {...this.props}\r\n\t\t      onHide={()=>setModalVisible(false)}\r\n\t\t      size=\"sm\"\r\n\t\t      aria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t      centered\r\n\t\t    >\r\n\t\t      <Modal.Header closeButton>\r\n\t\t        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t          {title + \" bill\"}\r\n\t\t        </Modal.Title>\r\n\t\t      </Modal.Header>\r\n\t\t      <Modal.Body>\r\n\t\t        <h4>Payment name</h4>\r\n\t\t        <input type=\"text\" category=\"paymentName\" placeholder=\"Rent\" value={paymentName} onChange={this.handleInputChanged}></input>\r\n\t\t        <h4>Payment description</h4>\r\n\t\t        <textarea id=\"story\" category=\"paymentDesc\" rows=\"3\" cols=\"33\" placeholder=\"Hey, I just met you...\" value={paymentDesc} onChange={this.handleInputChanged}></textarea>\r\n\t\t        <h4>Cost (in $)</h4>\r\n\t\t\t\t<input type=\"text\" category=\"cost\" placeholder=\"Cost\" value={cost} onChange={this.handleInputChanged}></input>\r\n\t\t        <h4>Color</h4>\r\n\t\t        <SliderPicker\r\n\t\t        \tcolor={color}\r\n\t\t        \tonChangeComplete={this.setColor}>\r\n\t\t        </SliderPicker>\r\n\t\t      </Modal.Body>\r\n\t\t      <Modal.Footer>\r\n\t\t      \t<Button variant=\"outline-dark\" onClick={()=>setModalVisible(false)}>Close</Button>\r\n\t\t        <Button variant=\"outline-dark\" onClick={()=>\r\n\t\t        \t{\r\n\t\t        \t\tif(paymentName.length>0 && paymentDesc.length>0 && cost.length>0){\r\n\t\t        \t\t\tif(!isNaN(cost)){\r\n\t\t        \t\t\t\treturn submit(this.state);\r\n\t\t        \t\t\t} else{\r\n\t\t        \t\t\t\talert(\"Cost must only be a number\");\r\n\t\t        \t\t\t}\r\n\t\t        \t\t} else{\r\n\t\t        \t\t\talert(\"All fields must be filled.\");\r\n\t\t        \t\t}\r\n\t\t        \t}\r\n\t\t        }>{title}\r\n\t\t        </Button>\r\n\t\t      </Modal.Footer>\r\n\t\t    </Modal>\r\n\t\t);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nexport default BillModal;\r\n","import React from 'react';\r\n\r\nconst Circle = ({color})=>{\r\n\treturn(\r\n\t\t<div style={{width: '10px', height: '10px', backgroundColor:color, borderRadius: '50%', marginRight: '5px'}}></div>\r\n\t);\r\n}\r\n\r\nexport default Circle;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport './BillCard.css';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Circle from './Circle.js';\r\n\r\nconst BillCard=({bills, editBillModal, deleteBill})=>{\r\n\tconst billRows = [];\r\n\tlet total = 0;\r\n\tbills.forEach((bill, index)=>{\r\n\t\ttotal+=Number(bill.cost);\r\n\t\tbillRows.push(\r\n\t\t\t<Row key= {index} style={{marginLeft: '0', marginRight: '0'}}>\r\n\t\t    \t<Col className=\"bills d-flex align-items-center\" xs=\"3\" style={{borderRight: '0'}}>\r\n\t\t    \t\t<Col sm=\"2\"><Circle color={bill.color}></Circle></Col>\r\n\t\t    \t\t<Col sm=\"10\">{bill.paymentName}</Col>\r\n\t\t    \t</Col>\r\n\t\t    \t<Col className=\"bills d-flex align-items-center justify-content-end\" xs=\"2\" style={{borderRight: '0'}}>${bill.cost}</Col>\r\n\t\t    \t<Col className=\"bills d-flex align-items-center\" xs=\"5\" style={{borderRight: '0'}}>{bill.paymentDesc}</Col>\r\n\t\t    \t<Col className=\"bills d-flex align-items-center editColumn\" xs=\"2\">\r\n\t\t    \t\t<h4 onClick={()=>editBillModal({title: bill.title, paymentName: bill.paymentName, paymentDesc: bill.paymentDesc, cost:  bill.cost, color: bill.color, id: bill.id})}>Edit</h4>\r\n\t\t    \t\t•\r\n\t    \t\t\t<h4 onClick={()=>deleteBill(bill.id)}>Delete</h4>\r\n\t\t    \t</Col>\r\n\t\t    </Row>\r\n\t    );\r\n\t});\r\n\treturn(\r\n\t\t<Card id=\"card\" style={{ width: '100%', border: 'none' }}>\r\n\t    \t<Card.Body style={{padding: '0'}}>\r\n\t    \t\t<Row style={{marginLeft: '0', marginRight: '0'}}>\r\n\t    \t\t\t<Col className=\"headings d-flex align-items-center\" xs=\"3\" style={{borderRight: '0'}}><h4>Name</h4></Col>\r\n\t    \t\t\t<Col className=\"headings d-flex align-items-center justify-content-end\" xs=\"2\" style={{borderRight: '0'}}><h4>Cost (in $)</h4></Col>\r\n\t    \t\t\t<Col className=\"headings d-flex align-items-center\" xs=\"5\" style={{borderRight: '0'}}><h4>Description</h4></Col>\r\n\t    \t\t\t<Col className=\"headings d-flex align-items-center\" xs=\"2\"><h4>Edit/Delete</h4></Col>\r\n\t    \t\t</Row>\r\n\t    \t\t{billRows}\r\n\t    \t\t<Row style={{marginLeft: '0', marginRight: '0'}}>\r\n\t    \t\t\t<Col className=\"totalRow d-flex align-items-center justify-content-end\" xs=\"3\" style={{borderRight: '0'}}><h4>Total</h4></Col>\r\n\t    \t\t\t<Col className=\"totalRow d-flex align-items-center justify-content-end\" xs=\"2\" style={{borderRight: '0'}}><h4>${total}</h4></Col>\r\n\t    \t\t\t<Col className=\"totalRow d-flex align-items-center\" xs=\"7\"></Col>\r\n\t    \t\t</Row>\r\n\t    \t</Card.Body>\r\n\t  \t</Card>\r\n\t);\r\n}\r\n\r\nexport default BillCard;","import React from 'react';\r\nimport './TopMessage.css';\r\n\r\nconst TopMessage = ({bills, startingMoney})=>{\r\n\tlet remainingMoney = startingMoney;\r\n\tlet message = '';\r\n\tbills.forEach((bill)=>{\r\n\t\tremainingMoney-=Number(bill.cost);\r\n\t});\r\n\tremainingMoney = Math.round((remainingMoney + 0.00001) * 100) / 100;\r\n\tif(remainingMoney>(startingMoney*0.1)){\r\n\t\tmessage=<h1>You have <span id=\"safe\" className=\"messageSpan\">${remainingMoney}</span> safe to spend</h1>\r\n\t} else if(remainingMoney>0){\r\n\t\tmessage=<h1>You have <span id=\"risk\" className=\"messageSpan\">${remainingMoney}</span> safe to spend. Make sure not to spend too much more.</h1>;\r\n\t} else{\r\n\t\tmessage = <h1>You are down by <span id=\"unsafe\" className=\"messageSpan\">${remainingMoney}</span>. Better make some changes.</h1>;\r\n\t}\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TopMessage;","import React from 'react';\r\n\r\nconst ColorBar = ({bills, containerWidth, showBillName})=>{\r\n\tlet total = 0;\r\n\tbills.forEach((bill)=>{\r\n\t\ttotal+=Number(bill.cost);\r\n\t});\r\n\r\n\tlet bars = [];\r\n\r\n\tbills.forEach((bill, index)=>{\r\n\t\tconst pixels=(bill.cost/total)*containerWidth-1; //2 is a margin\r\n\t\tbars.push(<div key ={bill.id} onMouseEnter={()=>showBillName(bill.paymentName, true)} onMouseLeave={()=>showBillName(\"Placeholder\", false)} style={{width: pixels, backgroundColor: bill.color, height: '10px', marginRight: '1px'}}></div>);\r\n\t});\r\n\tif(bills.length===0){\r\n\t\tbars.push(<div style={{width: containerWidth, backgroundColor: 'white', height: '10px'}}></div>)\r\n\t}\r\n\treturn(\r\n\t\t<div style={{display: 'flex'}}>\r\n\t\t\t{bars}\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n\r\n}\r\n\r\nexport default ColorBar;","import React from 'react';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport './SortingButton.css';\r\n\r\n\r\nconst SortingDropdown = ({bills, sortBills})=>{\r\n\treturn(\r\n\t\t<DropdownButton id=\"dropdown-basic-button\" title=\"Sort Bills\">\r\n  \t\t\t<Dropdown.Item onClick={()=>sortBills(\"HighToLow\")}>Highest To Lowest Cost</Dropdown.Item>\r\n  \t\t\t<Dropdown.Item onClick={()=>sortBills(\"LowToHigh\")}>Lowest To Highest Cost</Dropdown.Item>\r\n  \t\t\t<Dropdown.Item onClick={()=>sortBills(\"Alpha\")}>Alphabetical</Dropdown.Item>\r\n\t\t</DropdownButton>\r\n\t);\r\n}\r\n\r\nexport default SortingDropdown;","import React, {Component} from 'react';\nimport './App.css';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport AddButton from '../Components/AddButton.js';\nimport BillModal from '../Components/BillModal.js';\nimport BillCard from '../Components/BillCard.js';\nimport TopMessage from '../Components/TopMessage.js';\nimport ColorBar from '../Components/ColorBar.js';\nimport SortingDropdown from '../Components/SortingDropdown.js';\n\n\nclass App extends Component{\n\n  constructor(){\n    super()\n    this.state={\n      bills: [],\n      renderModal: false,\n      modalData: {},\n      containerWidth: 0,\n      colorBarHoverText: \"Placeholder\",\n      income: 1000,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({bills: JSON.parse(localStorage.getItem(\"bills\"))});\n    this.setState({income: Number(localStorage.getItem(\"monthlyIncome\"))});\n    var self = this;\n    self.setState({containerWidth: document.getElementById(\"colorBarContainer\").offsetWidth});\n    window.addEventListener(\"resize\", function(){\n      self.setState({containerWidth: document.getElementById(\"colorBarContainer\").offsetWidth});\n    });\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem(\"bills\", JSON.stringify(this.state.bills));\n    localStorage.setItem(\"monthlyIncome\", this.state.income);\n  }\n\n  //a helper method to find a bill by its id\n  findBillIndexById=(billId)=>{\n    let index = null;\n    this.state.bills.forEach((bill, billIndex)=>{\n      if(bill.id===billId){\n        index=billIndex;\n      }\n    });\n    return index;\n  }\n\n  //deleted the bill with the specified id\n  deleteBill = (billId)=>{\n    let newStateArray = this.state.bills;\n    let index = this.findBillIndexById(billId);\n    try{\n      newStateArray.splice(index, 1);\n      this.setState({bills: newStateArray});\n    } catch(e){\n      alert(\"An error occured\");\n    }\n    \n  }\n\n  //upon clicking add or edit in bill modal\n  addEditBill=(billInfo)=>{\n    let newStateArray;\n    if(billInfo.title===\"Add\"){\n      billInfo.title=\"Edit\";\n      newStateArray = this.state.bills.slice();\n      newStateArray.push(billInfo);\n    } else{ //bill is being edited\n      newStateArray = this.state.bills.slice();\n      let index = this.findBillIndexById(billInfo.id);\n      try{\n        newStateArray[index]=billInfo;\n      }catch(e){\n        alert(\"An error occured editing the bill\");\n        this.setModalVisible(false);\n        return;\n      }\n    }\n\n    this.setState({bills: newStateArray});  \n    this.setModalVisible(false);\n      \n  }\n\n  //used to createa new bill modal with specified data (after clicking plus sign button or edit button)\n  createBillModal=(data)=>{\n    this.setModalVisible(true);\n\n    //the bill is not being edited\n    if(data.id===null){\n      data.id = this.state.bills.length; //this will be the id of the bill\n    }\n    this.setModalData(data);\n  }\n\n  //controls whether to show the modal or not\n  setModalVisible = (visible) => {\n    if(visible){\n      this.setState({renderModal: true});\n    } else{\n      this.setState({renderModal: false});\n    }\n  }\n\n  //will set the modal data\n  setModalData = (data) =>{\n    this.setState({modalData: data});\n  }\n\n  showBillName = (paymentName, show)=>{\n    this.setState({colorBarHoverText: paymentName});\n    if(show)\n      document.getElementById(\"colorBarHoverText\").style.color=\"black\";\n    else\n      document.getElementById(\"colorBarHoverText\").style.color=\"white\";\n  }\n\n  changeIncome=()=>{\n    var newIncome = prompt(\"Enter your income per month:\", \"1000\");\n    if (newIncome != null && !isNaN(newIncome)) {\n      this.setState({income: Number(newIncome)});\n    }\n  }\n\n  //sort the bills\n  sortBills = (sortType)=>{\n    if(sortType===\"HighToLow\"){\n      let billsSorted = this.state.bills;\n      billsSorted.sort(function(a, b){\n        return b.cost-a.cost;\n      });\n      this.setState({bills: billsSorted});\n    }else if(sortType===\"LowToHigh\"){\n      let billsSorted = this.state.bills;\n      billsSorted.sort(function(a, b){\n        return a.cost-b.cost;\n      });\n      this.setState({bills: billsSorted});\n    }else if(sortType===\"Alpha\"){\n      let billsSorted = this.state.bills;\n      billsSorted.sort(function(a, b){\n        return a.paymentName.toLowerCase().localeCompare(b.paymentName.toLowerCase());\n      });\n      this.setState({bills: billsSorted});\n    }\n  }\n\n  render(){\n    const {bills, renderModal, modalData, containerWidth, colorBarHoverText, income} = this.state;\n    const billModal = renderModal ? <BillModal show={true} data={modalData} setModalVisible={this.setModalVisible} submit={this.addEditBill}/> : null;\n    return (\n      <div id=\"container\" className=\"container\" style={{marginTop: '1rem'}}>\n        {billModal}\n        <Row noGutters=\"true\">\n          <Col xs=\"2\" style={{marginRight: '1rem', display: 'flex', alignItems: 'center'}}><AddButton createNewBill={this.createBillModal}></AddButton></Col>\n          <Col xs=\"9\" style={{display: 'flex', alignItems: 'center'}}><TopMessage bills={bills} startingMoney={income}></TopMessage></Col>\n        </Row>\n        <hr style={{borderColor: 'lightGray', marginBottom: '0'}}/>\n        <Row id=\"sortingRow\" style={{marginTop: '0.5rem'}}>\n          <Col><h5 id=\"editButton\" onClick={()=>this.changeIncome()}>Edit Income</h5></Col>\n          <Col className=\"d-flex justify-content-end\"><SortingDropdown bills={bills} sortBills={this.sortBills}></SortingDropdown></Col>\n        </Row> \n        <Row noGutters=\"true\" id=\"colorBarContainer\">\n          <h5 id=\"colorBarHoverText\">{colorBarHoverText}</h5>\n          <ColorBar bills={bills} containerWidth={containerWidth} showBillName={this.showBillName}></ColorBar>\n        </Row>\n        <Row noGutters=\"true\">\n          <BillCard bills={bills} editBillModal={this.createBillModal} deleteBill={this.deleteBill}></BillCard>\n        </Row>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}